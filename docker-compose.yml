---
version: '3.6'

services:
  db:
    image: postgres:14.3-alpine3.15
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - api

  redis:
    image: redis:alpine
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
    networks:
      - api

  app:
    container_name: coupon-app
    build: .
    image: coupon-app
    restart: unless-stopped
    environment:
      POSTGRES_HOST: "postgres"
      REDIS_HOST: "redis"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - api
      - proxy

  proxy:
    container_name: nginx
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - 8080:80
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    networks:
      - proxy

  ui:
    container_name: coupon-ui
    build:
      context: ./ui
      dockerfile: Dockerfile
    image: coupon-ui
    restart: unless-stopped
    environment:
      PUBLIC_API_URL: "http://nginx:80"
    ports:
      - 5173:5173
    networks:
      - proxy
    depends_on:
      - db
      - redis
      - app
      - proxy

networks:
  api:
    name: api
  proxy:
    external: true
